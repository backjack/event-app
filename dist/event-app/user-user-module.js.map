{"version":3,"sources":["webpack:///./src/app/user/login/login.component.css","webpack:///./src/app/user/login/login.component.html","webpack:///./src/app/user/login/login.component.ts","webpack:///./src/app/user/user-profile.component.html","webpack:///./src/app/user/user-profile.component.ts","webpack:///./src/app/user/user-routes.ts","webpack:///./src/app/user/user.module.ts"],"names":[],"mappings":"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","file":"user-user-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"\\n<div class=\\\"container\\\">\\n<h1>Login</h1>\\n<hr>\\n<div class = \\\"col-md-4\\\">\\n\\n<em *ngIf=\\\"isLoginFailed\\\"> Invalid username or password</em>\\n<form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"login(loginForm.value)\\\" autocomplete=\\\"off\\\">\\n   <div class=\\\"form-group\\\">\\n      <label for =\\\"userName\\\">User Name:</label>\\n      <input ngModel name='userName' id=\\\"userName\\\"  type=\\\"text\\\" required\\n       class=\\\"form-control\\\" placeholder=\\\"User Name ...\\\" >\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label for =\\\"password\\\">Password:</label>\\n        <input ngModel name='password' id=\\\"password\\\"  type=\\\"password\\\" required\\n         class=\\\"form-control\\\" placeholder=\\\"Password ...\\\">\\n      </div>\\n\\n\\n   <button type='submit' class='btn btn-primary'>Login</button>\\n   <button type='button' class='btn btn-default'>Cancel</button>\\n  </form>\\n</div>\\n\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/user/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n\n   isLoginFailed: boolean;\n\n  constructor(private authService: AuthService,private router:Router) {\n   \n  }\n\n  login(val) {\n    this.authService.login(val.userName, val.password).subscribe((data:Array<any>)=>{\n        if(data.length>0) {\n           this.successLogin();\n       } else {\n          this.loginFailed();\n       }\n     });\n\n  }\n\n  successLogin = function() {\n    this.router.navigate([\"events\"]);\n    this.isLoginFailed = false;\n  }\n  \n  loginFailed = function() {\n    this.isLoginFailed = true;\n  }\n\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\r\\n<div class =\\\"container\\\">\\r\\n        <h2> Edit Your Profile </h2>\\r\\n    <div class=\\\"col-md-5\\\">\\r\\n        <form [formGroup] = 'profileForm' autocomplete=\\\"off\\\" (ngSubmit)=\\\"save(profileForm.value)\\\">\\r\\n\\r\\n            <div>\\r\\n                    <label for =\\\"firstName\\\">First Name:</label>\\r\\n                    <em  *ngIf=\\\"validateFirstName() && profileForm.controls.firstName.errors.required\\\"> Required</em>\\r\\n                    <em  *ngIf=\\\"validateFirstName() && profileForm.controls.firstName.errors.pattern\\\"> Incorrect value</em>\\r\\n                    <input formControlName =\\\"firstName\\\" id=\\\"userName\\\"  type=\\\"text\\\" required\\r\\n                     class=\\\"form-control\\\" placeholder=\\\"First Name ...\\\" >\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                    <label for =\\\"lastName\\\">LastName:</label>\\r\\n                    <input formControlName =\\\"lastName\\\" id=\\\"lastName\\\"  type=\\\"text\\\" required\\r\\n                     class=\\\"form-control\\\" placeholder=\\\"Last Name ...\\\">\\r\\n                  </div>\\r\\n            \\r\\n            \\r\\n               <button type='submit' [disabled]= \\\"profileForm.invalid\\\" class='btn btn-primary'>Save</button>\\r\\n               <button type='button' class='btn btn-default'>Cancel</button>\\r\\n        </form>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n</div>\"","\r\nimport { Component } from \"@angular/core\";\r\nimport { OnInit } from \"@angular/core\";\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { Validators } from \"@angular/forms\";\r\nimport { AuthService } from \"src/app/user/auth.service\";\r\n\r\n\r\n\r\n@Component({\r\n\r\n    templateUrl:'user-profile.component.html',\r\n    styles:['error {color:red}']\r\n    \r\n})\r\nexport class UserProfile implements OnInit{\r\n \r\n   profileForm: FormGroup \r\n   firstName: FormControl;\r\n   lastName: FormControl;\r\n\r\n   constructor(private authService:AuthService) {\r\n\r\n   }\r\n  ngOnInit(): void {\r\n    \r\n    this.firstName = new FormControl(\"a\", [Validators.required, Validators.pattern(\"[a-zA-Z].*\")]);\r\n    this.lastName = new FormControl(\"b\", Validators.required);\r\n    this.profileForm = new FormGroup({\r\n      firstName:this.firstName,\r\n      lastName:this.lastName\r\n    })\r\n    \r\n  }\r\n\r\n  validateFirstName() {\r\n\r\n    return this.firstName.invalid && this.firstName.touched\r\n  }\r\n\r\n  save(values) {\r\nconsole.log(values);\r\n    this.authService.save(values.firstName,values.lastName,this.authService.currentUser.id).subscribe(data=>{console.log(data)});\r\n  }\r\n\r\n\r\n}","\r\nimport { UserProfile } from \"src/app/user/user-profile.component\";\r\nimport {Routes} from '@angular/router'\r\nimport { LoginComponent } from \"src/app/user/login/login.component\";\r\n\r\n\r\nexport const userRoutes:Routes =[\r\n    {path : \"profile\", component :UserProfile},\r\n    {path : \"login\", component :LoginComponent}\r\n]","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport  {UserProfile}  from './user-profile.component'\nimport { RouterModule } from '@angular/router'\nimport { HttpClientModule } from '@angular/common/http'\nimport { LoginComponent } from './login/login.component'\nimport {userRoutes} from './user-routes'\nimport {FormsModule,ReactiveFormsModule}  from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(userRoutes),\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  declarations: [UserProfile,LoginComponent]\n})\nexport class UserModule { }\n"],"sourceRoot":""}